services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medplatform_backend
    environment:
      # به nginx-proxy می‌گوید که این کانتینر را برای این دامنه در دسترس قرار بده
      - VIRTUAL_HOST=my.medicalvance.com
      # به nginx-proxy می‌گوید که درخواست‌های API را به این پورت بفرست
      - VIRTUAL_PORT=5000
      # به nginx-proxy می‌گوید که گواهی SSL را برای این دامنه فعال کند
      - LETSENCRYPT_HOST=my.medicalvance.com
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # پورت‌ها دیگر به بیرون expose نمی‌شوند، nginx-proxy این کار را می‌کند

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medplatform_frontend
    environment:
      # فرانت‌اند هم روی همین دامنه اصلی سرو می‌شود
      - VIRTUAL_HOST=my.medicalvance.com
      - VIRTUAL_PORT=5173
      - LETSENCRYPT_HOST=my.medicalvance.com
    restart: unless-stopped

  db:
    build:
      context: ./db # <--- یک پوشه جدید برای دیتابیس می‌سازیم
    container_name: medplatform_db
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:

# مهم: مطمئن شوید که همه کانتینرها به شبکه nginx-proxy متصل هستند
networks:
  default:
    external:
      name: nginx-proxy # نام شبکه پیش‌فرض nginx-proxy معمولاً این است
